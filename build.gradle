plugins {
	id 'fabric-loom' version '1.8-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven { url "https://maven.tomalbrc.de" }
	maven {url = "https://maven.nucleoid.xyz/"}
	maven {
		name = "Modrinth"
		url = "https://api.modrinth.com/maven"
		content {
			includeGroup "maven.modrinth"
		}
	}
	mavenCentral()


	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
}

loom {
    splitEnvironmentSourceSets()

	mods {
		"peoplemineseason5" {
			sourceSet sourceSets.main
		}
	}

}

dependencies {

	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation include("de.tomalbrc:blockbench-import-library:1.1.20+1.21.2")
	modImplementation include("xyz.nucleoid:server-translations-api:2.4.0+1.21.2-rc1")
	modImplementation include("eu.pb4:polymer-core:${project.polymer_version}")
	modImplementation include("eu.pb4:polymer-blocks:${project.polymer_version}")
	modImplementation include("eu.pb4:polymer-resource-pack:${project.polymer_version}")
	modImplementation include("eu.pb4:polymer-resource-pack-extras:${project.polymer_version}")
	modImplementation include("eu.pb4:polymer-networking:${project.polymer_version}")
	modImplementation include("eu.pb4:sgui:1.8.2+1.21.4")

	modImplementation include("eu.pb4:polymer-virtual-entity:${project.polymer_version}")
	modImplementation include("eu.pb4:factorytools:0.5.0+1.21.4")
	modImplementation include("maven.modrinth:structureplacerapi:1.1.0")

	compileOnly("io.github.toxicity188:BetterHud-standard-api:1.11.4") //Standard api
	modCompileOnly("io.github.toxicity188:BetterHud-fabric-api:1.11.4") //Platform api
	compileOnly("io.github.toxicity188:BetterCommand:1.4.2") //BetterCommand library

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}